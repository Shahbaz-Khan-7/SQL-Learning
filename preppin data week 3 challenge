--For the transactions file:
--Filter the transactions to just look at DSB
--These will be transactions that contain DSB in the Transaction Code field
--Rename the values in the Online or In-person field, Online of the 1 values and In-Person for the 2 values
--Change the date to be the quarter
--Sum the transaction values for each quarter and for each Type of Transaction (Online or In-Person)

select * from TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK01;

create or replace temporary table PD_week3_transactions as SELECT 
    quarter(date(transaction_date, 'dd/mm/yyyy hh24:mi:ss')) as Quarter,
    CASE 
        WHEN online_or_in_person = 1 THEN 'Online'
        WHEN online_or_in_person = 2 THEN 'In-Person'
    END AS transaction_type,
    SUM(value) as value
FROM 
    TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK01
WHERE 
    transaction_code LIKE '%DSB%'
GROUP BY 
    quarter, transaction_type;

select * from pd_week3_transactions;

--For the targets file:
--Pivot the quarterly targets so we have a row for each Type of Transaction and each Quarter
--Rename the fields
--Remove the 'Q' from the quarter field and make the data type numeric

select * from TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK03_TARGETS;

CREATE or REPLACE TEMPORARY TABLE PD_week3_targets AS SELECT 
    online_or_in_person,
    CAST(REPLACE(Quarter, 'Q', '') AS INTEGER) AS Quarter,
    Quarterly_targets
    FROM 
        TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK03_TARGETS
UNPIVOT 
    (Quarterly_targets FOR Quarter IN (Q1, Q2, Q3, Q4));   --unpivot (name of value column FOR name of field title IN field names)

select * from pd_week3_targets;

--Join the two datasets together
--You may need more than one join clause!
--Remove unnecessary fields
--Calculate the Variance to Target for each row

select ta.online_or_in_person,ta.quarter,t.value,ta.quarterly_targets, cast(value - quarterly_targets as integer) as variance_from_target from pd_week3_transactions t
join pd_week3_targets ta
on t.transaction_type = ta.online_or_in_person and t.quarter = ta.quarter;

--can also use 'with CTE as (the query)' CTE -common table expression you dont have to call it CTE 